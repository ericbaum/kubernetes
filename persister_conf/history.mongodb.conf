input {
  http {
    codec => json
    port => 8666
  }
}

filter {
  #split outer list
  split {
    field => "contextResponses"
  }

  # generates one event per attribute
  split {
    field => "[contextResponses][contextElement][attributes]"
  }

  # drops system-generated attributes
  if [contextResponses][contextElement][attributes][name] == "TimeInstant" { drop {} }
  if [contextResponses][contextElement][attributes][name] == "user_label"  { drop {} }

  # select only timestamp from metadata
  ruby {
    code => '
      data = event.get("[contextResponses][contextElement][attributes][metadatas]")
      if data == nil
        event.cancel
      else
        data.each do |i|
          if i["name"] == "TimeInstant"
            event.set("[ts]", i["value"])
            break
          end
        end
      end
    '
  }

  # schema changes - flatten structure, remove unnecessary info
  mutate {
    copy => {
      "[headers][http_fiware_service]" => "service"
      "[contextResponses][contextElement][id]" => "device_id"
      "[contextResponses][contextElement][type]" => "device_type"
      "[contextResponses][contextElement][attributes][name]" => "attr"
      "[contextResponses][contextElement][attributes][type]" => "type"
      "[contextResponses][contextElement][attributes][value]" => "value"
    }

    remove_field => [
      "[headers]", "[contextResponses]",
      "[host]", "[originator]",
      "[subscriptionId]"
    ]
  }git
}

# persists each preprocessed attribute entry in mongo
output {
  mongodb {
    codec => json
    database => "device_history"
    collection => "%{[service]}_%{[device_id]}"
    uri => "mongodb://mongodb/?replicaSet=rs0"
    isodate => true
  }
}